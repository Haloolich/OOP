<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QBERXhpZgAATU0AKgAAAAgAAgE7AAIAAAAHAAAAJpydAAEAAAAO
        AAAALgAAAABKYXlTYXkAAEoAYQB5AFMAYQB5AAAA/9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJCQoVDxAM
        ERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjInKisq/9sAQwEHCAgKCQoUCwsUKhwYHCoq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq/8AAEQgANADBAwEi
        AAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAAB
        fQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNE
        RUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
        tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEA
        AAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRC
        kaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpz
        dHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+kaKKKACiiigAooooAKKKKACiiigAooooAKK
        KKACiiigDNuPEeiWlw8F1rOnwTIcPHJdIrKfcE5FXoLiG6t0ntZY5oZBlJI2DKw9QR1rzrx54S8M29hN
        Hb6Bpl1r/iK98iC5urRJpFkk+/JlgSAiBmx0G0etafiy+1H4feCba48N2lkdK0eKMXMc4dnMCsqkIFIA
        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
</value>
  </data>
</root>